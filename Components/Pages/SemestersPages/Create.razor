@page "/semesters/create"

@using Microsoft.EntityFrameworkCore
@using BlazorApp3.Models
@inject IDbContextFactory<BlazorApp3.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1><i class="fa-solid fa-square-plus"></i></h1>

<h4 class="mb-4">Add New Semester</h4>
<hr />

<div class="row justify-content-center">
    <div class="col-md-6 col-lg-4">
        <EditForm method="post" Model="Semesters" OnValidSubmit="AddSemesters" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />

            <div class="mb-3">
                <label for="name" class="form-label">Name:</label>
                <InputText id="name" @bind-Value="Semesters.Name" class="form-control" />
                <ValidationMessage For="() => Semesters.Name" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="startdate" class="form-label">Start Date:</label>
                <InputDate id="startdate" @bind-Value="Semesters.StartDate" class="form-control" />
                <ValidationMessage For="() => Semesters.StartDate" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="enddate" class="form-label">End Date:</label>
                <InputDate id="enddate" @bind-Value="Semesters.EndDate" class="form-control" />
                <ValidationMessage For="() => Semesters.EndDate" class="text-danger" />
            </div>

            <button type="submit" class="btn btn-primary w-100">Create</button>
        </EditForm>
    </div>
</div>

<div class="mt-3">
    <a href="/semesters" class="btn btn-secondary">
        <i class="fa-solid fa-arrow-left"></i> Back to List
    </a>
</div>


@code {

    [SupplyParameterFromForm]
    public Semesters Semesters { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddSemesters()
    {
        using var context = DbFactory.CreateDbContext();
        context.Semesters.Add(Semesters);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/semesters");
    }
}
