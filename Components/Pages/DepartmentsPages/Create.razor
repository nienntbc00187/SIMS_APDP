@page "/departments/create"

@using Microsoft.EntityFrameworkCore
@using BlazorApp3.Models
@inject IDbContextFactory<BlazorApp3.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Authorization
<PageTitle>Create</PageTitle>

<div class="container mt-4">
    <h4 class="mb-4">Add New Department</h4>
    <hr />

    <div class="card shadow-sm">
        <div class="card-body">
            <EditForm method="post" Model="Departments" OnValidSubmit="AddDepartments" FormName="create" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" />

                <div class="mb-3">
                    <label for="name" class="form-label">Name:</label>
                    <InputText id="name" @bind-Value="Departments.Name" class="form-control" />
                    <ValidationMessage For="() => Departments.Name" class="text-danger" />
                </div>

                <button type="submit" class="btn btn-primary w-100">Create</button>
            </EditForm>
        </div>
    </div>

    <div class="mt-3">
        <a href="/departments" class="btn btn-secondary">
            <i class="fa-solid fa-arrow-left"></i> Back to List
        </a>
    </div>
</div>


@code {

    [SupplyParameterFromForm]
    public Departments Departments { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddDepartments()
    {
        using var context = DbFactory.CreateDbContext();
        context.Departments.Add(Departments);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/departments");
    }
}
