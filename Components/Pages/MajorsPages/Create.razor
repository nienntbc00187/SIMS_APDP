@page "/majors/create"

@using Microsoft.EntityFrameworkCore
@using BlazorApp3.Models
@inject IDbContextFactory<BlazorApp3.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<div class="container mt-4">
    <h4 class="mb-4">Add New Major</h4>
    <hr />

    <div class="card shadow-sm">
        <div class="card-body">
            <EditForm method="post" Model="Majors" OnValidSubmit="AddMajors" FormName="create" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" />

                <div class="mb-3">
                    <label for="name" class="form-label">Name:</label>
                    <InputText id="name" @bind-Value="Majors.Name" class="form-control" />
                    <ValidationMessage For="() => Majors.Name" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="departmentid" class="form-label">Department:</label>
                    <InputSelect id="departmentid" @bind-Value="Majors.DepartmentId" class="form-control">
                        @foreach (var department in Departments)
                        {
                            <option value="@department.Id">@department.Name</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="() => Majors.DepartmentId" class="text-danger" />
                </div>

                <button type="submit" class="btn btn-primary w-100">Create</button>
            </EditForm>
        </div>
    </div>

    <div class="mt-3">
        <a href="/majors" class="btn btn-secondary">
            <i class="fa-solid fa-arrow-left"></i> Back to List
        </a>
    </div>
</div>


@code {

    [SupplyParameterFromForm]
    public Majors Majors { get; set; } = new();
    public List<Departments> Departments { get; set; } = new();
    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        Departments = await context.Departments.ToListAsync();
    }

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddMajors()
    {
        using var context = DbFactory.CreateDbContext();
        context.Majors.Add(Majors);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/majors");
    }
}
